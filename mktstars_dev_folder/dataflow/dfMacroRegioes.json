{
	"name": "dfMacroRegioes",
	"properties": {
		"folder": {
			"name": "1 - Extraction"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsExtMacroRegioesSaida",
						"type": "DatasetReference"
					},
					"name": "MacroRegioes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dsExtMacroRegioesDestino",
						"type": "DatasetReference"
					},
					"name": "regioesSilver"
				}
			],
			"transformations": [
				{
					"name": "dddCidadeEstado"
				},
				{
					"name": "SplitdddCidadeEstado"
				},
				{
					"name": "RegioesSeparadas"
				},
				{
					"name": "Selecao"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MacroRegioes",
				"MacroRegioes derive(dddcidadesestado = substring(Column_1,4,400)) ~> dddCidadeEstado",
				"dddCidadeEstado derive(SplitdddCidadeEstado = split(dddcidadesestado, 'â€“')) ~> SplitdddCidadeEstado",
				"SplitdddCidadeEstado derive(ddd = trim(SplitdddCidadeEstado[1]),",
				"          cidade = left(trim(SplitdddCidadeEstado[2]), length(trim(SplitdddCidadeEstado[2]))-1),",
				"          estado = trim(SplitdddCidadeEstado[3])) ~> RegioesSeparadas",
				"RegioesSeparadas select(mapColumn(",
				"          ddd,",
				"          cidade,",
				"          estado",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Selecao",
				"Selecao sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Tipo de Pagamento} as string",
				"     ),",
				"     partitionFileNames:['regioes.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> regioesSilver"
			]
		}
	}
}