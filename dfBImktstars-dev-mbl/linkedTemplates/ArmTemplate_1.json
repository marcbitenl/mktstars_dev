{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "dfBImktstars-dev-mbl"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dfExtProdutor')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartSaida",
								"type": "DatasetReference"
							},
							"name": "Vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtProdutorDestino",
								"type": "DatasetReference"
							},
							"name": "ProdutorSilver"
						}
					],
					"transformations": [
						{
							"name": "AgregaAuxiliar"
						},
						{
							"name": "SelecionarColuna"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Vendas",
						"Vendas aggregate(groupBy({Nome do Produtor}),",
						"     Contagem = count(Status)) ~> AgregaAuxiliar",
						"AgregaAuxiliar select(mapColumn(",
						"          {Nome do produtor} = {Nome do Produtor}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColuna",
						"SelecionarColuna sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Tipo de Pagamento} as string",
						"     ),",
						"     partitionFileNames:['produtor.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ProdutorSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartSaida",
								"type": "DatasetReference"
							},
							"name": "Vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dtExtStatusDestino",
								"type": "DatasetReference"
							},
							"name": "StatusSilver"
						}
					],
					"transformations": [
						{
							"name": "AgregaAuxiliar"
						},
						{
							"name": "SelecionarColuna"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Vendas",
						"Vendas aggregate(groupBy(Status),",
						"     Contagem = count(Status)) ~> AgregaAuxiliar",
						"AgregaAuxiliar select(mapColumn(",
						"          Status",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColuna",
						"SelecionarColuna sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Tipo de Pagamento} as string",
						"     ),",
						"     partitionFileNames:['status.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> StatusSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtTipoDePagamento')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartSaida",
								"type": "DatasetReference"
							},
							"name": "Vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtTipoDePagamentoDestino",
								"type": "DatasetReference"
							},
							"name": "TipoPagamentoSilver"
						}
					],
					"transformations": [
						{
							"name": "AgregAuxiliar"
						},
						{
							"name": "SelecionarColuna"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Vendas",
						"Vendas aggregate(groupBy({Tipo de Pagamento}),",
						"     Contagem = count()) ~> AgregAuxiliar",
						"AgregAuxiliar select(mapColumn(",
						"          {Tipo de Pagamento}",
						"     ),",
						"     partitionBy('hash', 1),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColuna",
						"SelecionarColuna sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Afiliado as string",
						"     ),",
						"     partitionFileNames:['TipoPagamento.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> TipoPagamentoSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtVendasHotmart')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartSaida",
								"type": "DatasetReference"
							},
							"name": "vendasHotmartSaida"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartDestino",
								"type": "DatasetReference"
							},
							"name": "vendasHotmartDestino"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> vendasHotmartSaida",
						"vendasHotmartSaida sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Tipo de Pagamento} as string",
						"     ),",
						"     partitionFileNames:['vendas.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> vendasHotmartDestino"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfMacroRegioes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtMacroRegioesSaida",
								"type": "DatasetReference"
							},
							"name": "MacroRegioes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtMacroRegioesDestino",
								"type": "DatasetReference"
							},
							"name": "regioesSilver"
						}
					],
					"transformations": [
						{
							"name": "dddCidadeEstado"
						},
						{
							"name": "SplitdddCidadeEstado"
						},
						{
							"name": "RegioesSeparadas"
						},
						{
							"name": "Selecao"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MacroRegioes",
						"MacroRegioes derive(dddcidadesestado = substring(Column_1,4,400)) ~> dddCidadeEstado",
						"dddCidadeEstado derive(SplitdddCidadeEstado = split(dddcidadesestado, '–')) ~> SplitdddCidadeEstado",
						"SplitdddCidadeEstado derive(ddd = trim(SplitdddCidadeEstado[1]),",
						"          cidade = left(trim(SplitdddCidadeEstado[2]), length(trim(SplitdddCidadeEstado[2]))-1),",
						"          estado = trim(SplitdddCidadeEstado[3])) ~> RegioesSeparadas",
						"RegioesSeparadas select(mapColumn(",
						"          ddd,",
						"          cidade,",
						"          estado",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Selecao",
						"Selecao sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Tipo de Pagamento} as string",
						"     ),",
						"     partitionFileNames:['regioes.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> regioesSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfSrcAfiliados')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2 - Stage"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtAfiliadosDestino",
								"type": "DatasetReference"
							},
							"name": "DLSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tblsrcAfiliados",
								"type": "DatasetReference"
							},
							"name": "srcDestino"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Afiliado as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DLSilver",
						"DLSilver sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Nome as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Nome = Afiliado",
						"     )) ~> srcDestino"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtAfiliados')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExTAfiliados",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtAfiliados",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Vendas": {},
									"AfiliadosSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtCursos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtCursos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtCursos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CodProdutos": {},
									"CursosSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtMacroRegioes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfMacroRegioes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfMacroRegioes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MacroRegioes": {},
									"regioesSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfMacroRegioes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtProdutor')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtProdutor",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtProdutor",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Vendas": {},
									"ProdutorSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtProdutor')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtStatus",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Vendas": {},
									"StatusSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtTipoDePagamento')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtTipoDePagamento",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtTipoDePagamento",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Vendas": {},
									"TipoPagamentoSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtTipoDePagamento')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtVendasHotmart')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfVendasHotmart",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtVendasHotmart",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendasHotmartSaida": {},
									"vendasHotmartDestino": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtVendasHotmart')]"
			]
		}
	]
}